<?xml version="1.0" ?>
<TRestManager name="RESTManagerSim" title="Template manager to process a simulation generated by restG4.">


    <globals>
        <variable name="EXPERIMENT" value="SegmentedMesh" overwrite="false"/>
		<variable name="RAW_PROCESSING" value="ON" />
		<variable name="HIT_PROCESSING" value="ON" />
		<variable name="TRACK_PROCESSING" value="ON" />
		<variable name="SHAPING" value="ON" />
		<variable name="NOISE_LEVEL" value="4"/>
        <parameter name="mainDataPath" value="."/>
        <parameter name="verboseLevel" value="warning"/>
        //modos: essential silent, warning, info, debug

		//samplingtime =??
		<parameter name="sampling" value="100ns" />
		<parameter name="driftVelocity" value="" />
		//valor de campo electrico: 100V/cm (valor típico)
		<parameter name="electricField" value="100" units="V/cm" /> 
		<parameter name="gasPressure" value="1" /> 
		//presion: 1 bar
    </globals>

    <TRestRun name="Process" title="Electron Simulations.">
        <parameter name="experimentName" value="${EXPERIMENT}"/>
        <parameter name="readOnly" value="false"/>
        <parameter name="runNumber" value="preserve"/>
        <parameter name="runTag" value="preserve"/>
        <parameter name="runType" value="g4Analysis"/>
        <parameter name="runDescription" value=""/>
        <parameter name="user" value="${USER}"/>
        <parameter name="verboseLevel" value="1"/>
        <parameter name="overwrite" value="off"/>
	<parameter name="outputFileName" value="datos/Noise_[fRunNumber]_[fRunTag]_${NOISE_LEVEL}.root" />

	
	<addMetadata type="TRestDetectorReadout" name="segmented" file="readout/readout_v2.root" store="false" />

	//Mezcla Argon Iso 1% 1 bar
	<TRestDetectorGas name="Argon-Isobutane 1Pct 10-10E3Vcm" pressure="1" file="server" />

    </TRestRun>


<TRestProcessRunner name="TemplateEventProcess" verboseLevel="info">
        <parameter name="eventsToProcess" value="0"/>
        <parameter name="threadNumber" value="1"/>

        <parameter name="inputAnalysisStorage" value="on"/>
        <parameter name="inputEventStorage" value="on"/>
        <parameter name="outputEventStorage" value="on"/>

        // observable = all will add all NON `custom` observables
        <addProcess type="TRestGeant4AnalysisProcess" name="g4Ana" value="ON">
	
			<observable name="xOriginPrimary" value="ON" />
			<observable name="yOriginPrimary" value="ON" />
			<observable name="zOriginPrimary" value="ON" />
			<observable name="xDirectionPrimary" value="ON" />
			<observable name="yDirectionPrimary" value="ON" />
			<observable name="zDirectionPrimary" value="ON" />
			<observable name="totalEdep" value="ON" />
        </addProcess>

		<addProcess type="TRestGeant4ToDetectorHitsProcess" name="G4ToHits" value="ON" />
		
		<addProcess type="TRestDetectorElectronDiffusionProcess" name="eDiff" value="ON" >
			<parameter name="attachment" value="0" />
			<parameter name="Wvalue" value="" units="eV" />
			<parameter name="maxHits" value="2000" />
		</addProcess>
		<addProcess type="TRestDetectorFiducializationProcess" name="Fid" value="ON" />

		<addProcess type="TRestDetectorHitsAnalysisProcess" name="hitsAna_1" title="A hits analysis process" observable="all"/>

		<addProcess type="TRestDetectorHitsSmearingProcess" name="smear" title="Smearing template">
			<parameter name="energyReference" value="200keV" />
			<parameter name="resolutionReference" value="13" />
		</addProcess>

		<addProcess type="TRestDetectorHitsAnalysisProcess" name="hitsAna_2" title="A hits analysis process" observable="all"/>

		<addProcess type="TRestDetectorHitsToSignalProcess" name="hitsToSignal" title="A hits to signal template" value="${HIT_PROCESSING}" >
			<parameter name="driftVelocity" value="" />
		</addProcess>


	<!--	<addProcess type="TRestDetectorSignalToHitsProcess" name="SigToHits" title="A signal to hits template" value="ON" method="all" /> -->

		<addProcess type="TRestDetectorSignalToRawSignalProcess" name="SignalToRaw" title="Physical signal to raw signal" value="${RAW_PROCESSING}">
			//número de puntos de las señales resultantes
			<parameter name="Npoints" value="512" />
			<parameter name="triggerMode" value="firstDeposit" />
			<parameter name="triggerDelay" value="150" />
			<parameter name="gain" value="100" />
		</addProcess>

		<addProcess type="TRestRawSignalShapingProcess" name="shaping" title="Signal shaping" value="${SHAPING}">
			//shapingType: gaus,shaperSin, shaper, responseFile (dice que solo gaussiana)
			<parameter name="shapingType" value="gaus" />
			<parameter name="shapingTime" value="10" />
			<parameter name="gain" value="1" />
		</addProcess>
	
		<addProcess type="TRestRawSignalAddNoiseProcess" name="noise" title="Signal noise" value="${RAW_PROCESSING}">
			<parameter name="noiseLevel" value="${NOISE_LEVEL}" />
		</addProcess>

	<addProcess type="TRestRawSignalAnalysisProcess" name="rawAna" title="Signal noise" value="${RAW_PROCESSING}" observable="all">


		</addProcess>
		

    </TRestProcessRunner>

    <addTask type="processEvents" value="ON"/>

</TRestManager>

